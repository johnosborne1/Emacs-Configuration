#+title: Emacs Literate Configuration
#+author: John Osborne
#+email: j.e.osborne2020@gmail.com
#+property: header-args :tangle init.el
#+options: num:nil

* Start-up
  Make startup faster by reducing the frequency of garbage collection.
  The default is 800 kilobytes.
  Measured in bytes.
  #+begin_src emacs-lisp
    (setq gc-cons-threshold (* 50 1000 1000))
  #+end_src

  Measure startup times.
  #+begin_src emacs-lisp
    (add-hook 'emacs-startup-hook
	      (lambda ()
		(message "Emacs ready in %s with %d garbage collections."
			 (format "%.2f seconds"
				 (float-time
				  (time-subtract after-init-time before-init-time)))
			 gcs-done)))
  #+end_src
  
* Libraries, packaging and Melpa
  Include local emacs lisp files.
  #+begin_src emacs-lisp
	(add-to-list 'load-path "~/.emacs.d/libraries")
  #+end_src

  Adds the 'Melpa' package archive.
  #+begin_src emacs-lisp
	  (require 'package)
	  (add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/") t)
	  (package-initialize)
  #+end_src

* Interface and Defaults
  Clean up the interface and general configuration of Emacs.
  #+begin_src emacs-lisp
    (line-number-mode 0)
    (column-number-mode 1)
    (blink-cursor-mode 0)
    (tool-bar-mode -1)
    (menu-bar-mode -1)
    (scroll-bar-mode -1)
    (electric-pair-mode t)
    (show-paren-mode t)
    (global-hl-line-mode 0)
    (defalias 'yes-or-no-p 'y-or-n-p)

    (setq-default
     user-mail-address "j.e.osborne2020@gmail.com"
     transient-mark-mode -1
     inhibit-startup-message t
     initial-scratch-message ""
     initial-major-mode 'org-mode
     kill-whole-line t
     require-final-newline t
     fill-column 80                         ; Set width for automatic line breaks
     help-window-select t)                  ; Focus new help windows when opened

    (add-hook 'prog-mode-hook
              '(lambda()
                 (linum-mode 1)))

    (add-hook 'text-mode-hook
              '(lambda()
                 (flyspell-mode 1)))

    (defadvice compile (around split-horizontally activate)
      (let ((split-width-threshold 0)
            (split-height-threshold nil))
        ad-do-it))

    ;; (require 'starwars)
  #+end_src

  Using themes.
  #+begin_src emacs-lisp
    (load-theme 'misterioso)
    ;; (load-theme 'leuven)
    ;; (load-theme 'wheatgrass)
    ;; (load-theme 'wombat)
    ;; (load-theme 'tango-dark)
    ;; (load-theme 'tango)
    ;; (load-theme 'dichromacy)
  #+end_src

  Garbage-collect on focus-out, Emacs should feel snappier.
  #+begin_src emacs-lisp
	(add-hook 'focus-out-hook #'garbage-collect)
  #+end_src

* Backups/Save files
  Move all backups files to '~/.emacs.d/saves' to clean up working directories.
  Make all the backups copies (for safety).
  #+begin_src emacs-lisp
	(setq backup-directory-alist `(("." . "~/.emacs.d/saves")))
	(setq backup-by-copying t)

	(setq
	 delete-old-versions t
	 kept-new-versions 6
	 kept-old-versions 2
	 version-control t)

	;; (setq make-backup-files nil)
  #+end_src

* Key-bindings
  #+begin_src emacs-lisp
    (global-set-key (kbd "C-c c") 'compile)
    (global-set-key (kbd "C-c s") 'shell)
    (global-set-key (kbd "C-c t") 'term)
  #+end_src

* Org-mode
  #+begin_src emacs-lisp

  #+end_src
  
* Lisp-mode
  #+begin_src emacs-lisp
    ;; (require 'cl)
  #+end_src

* Haskell-mode
  #+begin_src emacs-lisp
    (require 'haskell-mode)
  #+end_src
  
* C-mode
  #+begin_src emacs-lisp
	(add-hook 'c-mode-common-hook
			  (lambda ()
				(setq indent-tabs-mode t
					  c-basic-offset 8
					  tab-width 8
					  c-set-style "bsd")))

	;; (defun c-lineup-arglist-tabs-only (ignored)
	;;   "Line up argument lists by tabs, not spaces"
	;;   (let* ((anchor (c-langelem-pos c-syntactic-element))
	;; 		 (column (c-langelem-2nd-pos c-syntactic-element))
	;; 		 (offset (- (1+ column) anchor))
	;; 		 (steps (floor offset c-basic-offset)))
	;; 	(* (max steps 1)
	;; 	   c-basic-offset)))

	;; (add-hook 'c-mode-common-hook
	;; 		  (lambda ()
	;; 			;; Add kernel style
	;; 			(c-add-style
	;; 			 "linux-tabs-only"
	;; 			 '("linux" (c-offsets-alist
	;; 						(arglist-cont-nonempty
	;; 						 c-lineup-gcc-asm-reg
	;; 						 c-lineup-arglist-tabs-only))))))

	;; (add-hook 'c-mode-hook
	;; 		  (lambda ()
	;; 			(let ((filename (buffer-file-name)))
	;; 			  ;; Enable kernel mode for the appropriate files
	;; 			  (when (and filename
	;; 						 (string-match (expand-file-name "~/src/linux-trees")
	;; 									   filename))
	;; 				(setq indent-tabs-mode t)
	;; 				(setq show-trailing-whitespace t)
	;; 				(c-set-style "linux-tabs-only")))))
  #+end_src
  
* Shutdown
  Make gc pauses faster by decreasing the threshold.
  #+begin_src emacs-lisp
    (setq gc-cons-threshold (* 2 1000 1000))
  #+end_src
